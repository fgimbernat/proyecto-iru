// ============================================
// MIXINS & FUNCTIONS
// ============================================

// ---- Responsive Breakpoints ----
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// Custom breakpoint
@mixin respond-to-custom($width) {
  @media (min-width: $width) {
    @content;
  }
}

// ---- Flexbox Utilities ----
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center-column {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// ---- Typography ----
@mixin heading($size: $font-size-2xl, $weight: $font-weight-bold) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height-tight;
  color: $color-gray-900;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// ---- Transitions & Animations ----
@mixin transition($properties: all, $duration: $transition-base, $easing: $easing-in-out) {
  transition: $properties $duration $easing;
}

@mixin smooth-transition {
  transition: all $transition-base $easing-in-out;
}

@mixin hover-lift {
  transition: transform $transition-base $easing-out, box-shadow $transition-base $easing-out;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-elegant-hover;
  }
}

@mixin hover-scale($scale: 1.05) {
  transition: transform $transition-base $easing-out;
  
  &:hover {
    transform: scale($scale);
  }
}

// ---- Button Mixins ----
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-2 $spacing-4;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  line-height: $line-height-normal;
  border-radius: $radius-lg;
  border: none;
  cursor: pointer;
  @include smooth-transition;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color: $color-white, $hover-bg: null) {
  @include button-base;
  background-color: $bg-color;
  color: $text-color;
  
  @if $hover-bg {
    &:hover:not(:disabled) {
      background-color: $hover-bg;
    }
  } @else {
    &:hover:not(:disabled) {
      background-color: darken($bg-color, 8%);
    }
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($bg-color, 0.3);
  }
}

// ---- Card & Container Mixins ----
@mixin card($padding: $spacing-6) {
  background-color: $color-white;
  border-radius: $radius-xl;
  padding: $padding;
  box-shadow: $shadow-elegant;
  @include smooth-transition;
}

@mixin glass-effect {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

// ---- Input Mixins ----
@mixin input-base {
  width: 100%;
  padding: $spacing-2 $spacing-3;
  font-size: $font-size-sm;
  line-height: $line-height-normal;
  color: $color-gray-900;
  background-color: $color-white;
  border: 1px solid $color-gray-300;
  border-radius: $radius-lg;
  @include smooth-transition;
  
  &:focus {
    outline: none;
    border-color: $color-primary;
    box-shadow: 0 0 0 3px rgba($color-primary, 0.1);
  }
  
  &::placeholder {
    color: $color-gray-400;
  }
  
  &:disabled {
    background-color: $color-gray-100;
    cursor: not-allowed;
  }
}

// ---- Badge Mixins ----
@mixin badge($bg-color, $text-color) {
  display: inline-flex;
  align-items: center;
  padding: $spacing-1 $spacing-2;
  font-size: $font-size-xs;
  font-weight: $font-weight-medium;
  line-height: $line-height-tight;
  color: $text-color;
  background-color: $bg-color;
  border-radius: $radius-full;
}

// ---- Alert Mixins ----
@mixin alert-variant($bg-color, $border-color, $text-color) {
  padding: $spacing-4;
  background-color: $bg-color;
  border-left: 4px solid $border-color;
  border-radius: $radius-lg;
  color: $text-color;
  
  strong {
    color: darken($text-color, 10%);
  }
}

// ---- Positioning ----
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// ---- Scrollbar Styling ----
@mixin custom-scrollbar($width: 8px, $track-color: $color-gray-100, $thumb-color: $color-gray-400) {
  &::-webkit-scrollbar {
    width: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $radius-lg;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $radius-lg;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// ---- Grid Utilities ----
@mixin grid-auto-fit($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $spacing-6;
}

@mixin grid-auto-fill($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $spacing-6;
}

// ---- Animations ----
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@mixin animate($name, $duration: $transition-base, $easing: $easing-out) {
  animation: $name $duration $easing;
}
